parcelRequire=function(e,r,t,n){var i,o="function"==typeof parcelRequire&&parcelRequire,u="function"==typeof require&&require;function f(t,n){if(!r[t]){if(!e[t]){var i="function"==typeof parcelRequire&&parcelRequire;if(!n&&i)return i(t,!0);if(o)return o(t,!0);if(u&&"string"==typeof t)return u(t);var c=new Error("Cannot find module '"+t+"'");throw c.code="MODULE_NOT_FOUND",c}p.resolve=function(r){return e[t][1][r]||r},p.cache={};var l=r[t]=new f.Module(t);e[t][0].call(l.exports,p,l,l.exports,this)}return r[t].exports;function p(e){return f(p.resolve(e))}}f.isParcelRequire=!0,f.Module=function(e){this.id=e,this.bundle=f,this.exports={}},f.modules=e,f.cache=r,f.parent=o,f.register=function(r,t){e[r]=[function(e,r){r.exports=t},{}]};for(var c=0;c<t.length;c++)try{f(t[c])}catch(e){i||(i=e)}if(t.length){var l=f(t[t.length-1]);"object"==typeof exports&&"undefined"!=typeof module?module.exports=l:"function"==typeof define&&define.amd?define(function(){return l}):n&&(this[n]=l)}if(parcelRequire=f,i)throw i;return f}({"RaX2":[function(require,module,exports) {
"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.useFetch=a,exports.default=void 0,require("babel-polyfill");var e=require("react");function t(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},o=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(o=o.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),o.forEach(function(t){r(e,t,n[t])})}return e}function r(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){if(null==e)return{};var r,n,l=o(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(l[r]=e[r])}return l}function o(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}const l=e=>e===Object(e)&&"[object Array]"!==Object.prototype.toString.call(e);function a(r,o){let a=null,u={},s=!1,c="",i="GET";const b=e=>{{let{url:t,onMount:r,timeout:o,baseUrl:l}=e,a=n(e,["url","onMount","timeout","baseUrl"]);u=a}e.url&&(a=e.url),e.onMount&&(s=e.onMount),e.method&&(i=e.method),e.baseUrl&&(c=e.baseUrl)};"string"==typeof r?(a=r,l(o)&&b(o)):l(r)&&b(r);const[f,y]=(0,e.useState)(null),[p,O]=(0,e.useState)(s),[g,d]=(0,e.useState)(null),j=(0,e.useCallback)(e=>async(r,n)=>{let o="";const s={};l(r)&&"get"!==e.toLowerCase()?s.body=JSON.stringify(r):c&&"string"==typeof r&&(a=c+r,l(n)&&(s.body=JSON.stringify(n))),"string"==typeof r&&"string"==typeof n&&(o=n);try{O(!0);const r=await fetch(a+o,t({method:e},u,s));let n=null;try{n=await r.json()}catch(i){try{n=await r.text()}catch(i){d(`Currently only supports JSON and Text response types: ${i}`)}}y(n),O(!1)}catch(i){d(i)}},[a]),h=(0,e.useCallback)(j("GET")),m=(0,e.useCallback)(j("POST")),S=(0,e.useCallback)(j("PATCH")),w=(0,e.useCallback)(j("PUT")),v=(0,e.useCallback)(j("DELETE")),C={get:h,post:m,patch:S,put:w,del:v,delete:v};return(0,e.useEffect)(()=>{s&&C[i.toLowerCase()]()},[]),Object.assign([f,p,g,C],t({data:f,loading:p,error:g,request:C},C))}var u=a;exports.default=u;
},{}]},{},["RaX2"], null)
//# sourceMappingURL=/useFetch.js.map